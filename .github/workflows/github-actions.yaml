name: Github Workflow - Maven Release
env:
    GETGIST_TOKEN: ${{ secrets.GIT_OAUTH_TOKEN }}
    GPG_ID: 7CC36306
    USERNAME: larkz
on:
  # Trigger the workflow on push or pull request,
  # but only for the dev branch
  pull_request:
    types: [opened, closed, synchronize]
    branches:
      - dev
  push:
    branches:
      - dev
jobs:
  gradle_compilation:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk version
          sdk install gradle 6.0.1
          pip install getgist
          cd lib
          getgist ${{ env.USERNAME }} plaintext_gpg_${{ env.GPG_ID }}.txt
          gpg --allow-secret-key-import --import plaintext_gpg_${{ env.GPG_ID }}.txt
          mkdir gpg-keys
          gpg --export-secret-keys ${{ env.GPG_ID }} > gpg-keys/${{ env.GPG_ID }}.gpg
          getgist ${{ env.USERNAME }} mctreesearch4j_gradle.properties
          cp mctreesearch4j_gradle.properties gradle.properties
          gradle clean build
      - run: echo "🍏 This job's status is ${{ job.status }}."
  merge_and_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk version
          sdk install gradle 6.0.1
          pip install getgist
          cd lib
          getgist ${{ env.USERNAME }} plaintext_gpg_${{ env.GPG_ID }}.txt
          gpg --allow-secret-key-import --import plaintext_gpg_${{ env.GPG_ID }}.txt
          mkdir gpg-keys
          gpg --export-secret-keys ${{ env.GPG_ID }} > gpg-keys/${{ env.GPG_ID }}.gpg
          getgist ${{ env.USERNAME }} mctreesearch4j_gradle.properties
          cp mctreesearch4j_gradle.properties gradle.properties
          gradle uploadArchives
          echo PR #${{ github.event.number }} has been closed and merged, released to Nexus staging!
